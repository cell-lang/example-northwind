type Decimal = decimal(Int, Nat);
// type NonNegDecimal = decimal(Nat, Nat);


Decimal decimal(Int n)   = :decimal(n, 0);


Decimal (_+_)(Decimal x, Decimal y) {
  n_x, e10_x = untag(x);
  n_y, e10_y = untag(y);

  if e10_x < e10_y {
    for e10_y - e10_x
      n_x = 10 * n_x;
    e = e10_y;
  }
  else {
    for e10_x - e10_y
      n_y = 10 * n_y;
    e = e10_x;
  }

  n = n_x + n_y;

  while e > 0 and _mod_(n, 10) == 0 {
    n = n / 10;
    e = e - 1;
  }

  return :decimal(n, nat(e));
}


Decimal (_-_)(Decimal x, Decimal y) {
  n_x, e10_x = untag(x);
  n_y, e10_y = untag(y);

  while e10_x != e10_y
    if e10_x < e10_y {
      e10_x = e10_x + 1;
      n_x = 10 * n_x;
    }
    else {
      e10_y = e10_y + 1;
      n_y = 10 * n_y;
    }

  b = n_x - n_y;
  e = e10_x;

  while e > 0 and _mod_(b, 10) == 0 {
    b = b / 10;
    e = e - 1;
  }

  return :decimal(b, nat(e));
}


Decimal (_*_)(Int x, Decimal y) {
  n, e10 = untag(y);

  while _mod_(x, 10) == 0 and e10 > 0 {
    x = x / 10;
    e10 = e10 - 1;
  }

  return :decimal(x * n, e10);
}


Decimal (_*_)(Decimal x, Int y) = y * x;


Decimal (_/_)(Decimal x, Int y) =
  decimal(n, e10) = dec_div(n, e10 + y);


Decimal dec_div(Int x, Int y) {
  fail if y == 0;

  if y < 0 {
    x = -x;
    y = -y;
  }

  p2 = 0;
  while _mod_(y, 2) == 0 {
    if _mod_(x, 2) == 0
      x = x / 2;
    else
      p2 = p2 + 1;
    y = y / 2;
  }

  p5 = 0;
  while _mod_(y, 5) == 0 {
    if _mod_(b, 5) == 0
      x = x / 5;
    else
      p5 = p5 + 1;
    y = y / 5;
  }

  fail if y != 1;

  e10 = max(p2, p5);

  if p2 < p5
    for p5 - p2
      x = 2 * x;
  else
    for p2 - p5
      x = 5 * x;

  return :decimal(x, e10);
}